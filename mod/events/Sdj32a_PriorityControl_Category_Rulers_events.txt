namespace = SdjEvent

########################################
########################################
#####								#####
#####	Job Priority Manager		#####
#####								#####
#####	Menu of Job Categories		#####
#####								#####
########################################
########################################
#
# Category: ruler
#

country_event = {
	id = SdjEvent.2110
	base = SdjEvent.1022
	desc_clear = yes
	option_clear = yes
	desc = "SdjEvent.2011.desc"

	immediate = {
		set_variable = { which = SdjVarOpenedCategoryMenu value = 2110 }
	}

	after = {
		hidden_effect = {
			if = {
				limit = { check_variable = { which = SdjVarTargetJobCode value > 0.5 } }
				country_event = { id = SdjEvent.2013 }		## Job Menu
			} else_if = {
				limit = { check_variable = { which = SdjVarTargetJobCode value < 0 } }
				SdjEffectExitPriorityMenu = yes
			} else = { country_event = { id = SdjEvent.2011 } }		## Main Menu
		}
	}

	option = {
		name = SdjOption_cat_ruler.name
		# custom_tooltip = SdjOption_cat_ruler.tooltip
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = @SdjConstCatCode_pop_cat_ruler } }
	}
	option = {
		name = SEPARATOR
		custom_tooltip = SdjTextSeparator.tooltip
		allow = { hidden_trigger = { always = no } }
	}

	option = {
		name = SdjOption_job_politician.name
		# custom_tooltip = SdjOption_job_politician.tooltip
		trigger = {
			hidden_trigger = {
				# OR = {
				# 	always = yes
				# 	check_variable = { which = SdjVarMenuType value > 1.5 }
				# }
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 14 } }
	}
	option = {
		name = SdjOption_job_head_researcher.name
		# custom_tooltip = SdjOption_job_head_researcher.tooltip
		trigger = {
			hidden_trigger = {
				# OR = {
				# 	always = yes
				# 	check_variable = { which = SdjVarMenuType value > 1.5 }
				# }
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 12 } }
	}
	option = {
		name = SdjOption_job_high_priest.name
		# custom_tooltip = SdjOption_job_high_priest.tooltip
		trigger = {
			hidden_trigger = {
				OR = {
					has_civic = civic_exalted_priesthood
					check_variable = { which = SdjVarMenuType value > 1.5 }
				}
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 13 } }
	}
	option = {
		name = SdjOption_job_noble.name
		# custom_tooltip = SdjOption_job_noble.tooltip
		trigger = {
			hidden_trigger = {
				OR = {
					has_valid_civic = civic_aristocratic_elite
					check_variable = { which = SdjVarMenuType value > 1.5 }
				}
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 15 } }
	}
	option = {
		name = SdjOption_job_merchant.name
		# custom_tooltip = SdjOption_job_merchant.tooltip
		trigger = {
			hidden_trigger = {
				# OR = {
				# 	always = yes
				# 	check_variable = { which = SdjVarMenuType value > 1.5 }
				# }
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 16 } }
	}
	option = {
		name = SdjOption_job_executive.name
		# custom_tooltip = SdjOption_job_executive.tooltip
		trigger = {
			hidden_trigger = {
				OR = {
					is_megacorp = yes
					check_variable = { which = SdjVarMenuType value > 1.5 }
				}
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 17 } }
	}
	option = {
		name = SdjOption_job_knight_commander.name
		# custom_tooltip = SdjOption_job_knight_commander.tooltip
		trigger = {
			hidden_trigger = {
				OR = {
					is_megacorp = yes
					check_variable = { which = SdjVarMenuType value > 1.5 }
				}
			}
		}
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 79 } }
	}

	option = {
		name = SEPARATOR
		custom_tooltip = SdjTextSeparator.tooltip
		allow = { hidden_trigger = { always = no } }
	}
	option = {
		name = SdjTextGoBack.name
		custom_tooltip = SdjTextGoBack.tooltip
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = 0 } }
	}
	option = {
		name = SdjTextExit.name
		custom_tooltip = SdjTextExit.tooltip
		hidden_effect = { set_variable = { which = SdjVarTargetJobCode value = -1 } }
	}
	abort_trigger = { NOT = { has_country_flag = SdjFlagPriorityMenuOpened } }
	abort_effect = { SdjEffectExitPriorityMenu = yes }
}
